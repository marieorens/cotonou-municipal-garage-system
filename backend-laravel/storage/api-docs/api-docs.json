{
    "openapi": "3.0.0",
    "info": {
        "title": "Cotonou Municipal Garage API",
        "description": "API documentation for the Cotonou Municipal Garage System",
        "contact": {
            "email": "support@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://my-default-host.com",
            "description": "API Server"
        }
    ],
    "paths": {
        "/admin/users": {
            "get": {
                "tags": [
                    "Admin - Users"
                ],
                "summary": "Get list of users",
                "description": "Returns list of users",
                "operationId": "getUsersList",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search by name or email",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "role",
                        "in": "query",
                        "description": "Filter by role",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserResource"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin - Users"
                ],
                "summary": "Store new user",
                "description": "Returns user data",
                "operationId": "storeUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/admin/users/{id}": {
            "get": {
                "tags": [
                    "Admin - Users"
                ],
                "summary": "Get user information",
                "description": "Returns user data",
                "operationId": "getUserById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Admin - Users"
                ],
                "summary": "Update existing user",
                "description": "Returns updated user data",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Admin - Users"
                ],
                "summary": "Delete existing user",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User Login",
                "description": "Logs in a user and returns an auth token",
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "admin@test.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "type": "object"
                                        },
                                        "token": {
                                            "type": "string"
                                        },
                                        "expires_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User Logout",
                "description": "Logs out the current authenticated user",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Successful logout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/auth/profile": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get current user profile",
                "description": "Returns the profile of the authenticated user",
                "operationId": "getProfile",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/auth/change-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Change user password",
                "description": "Changes the password for the authenticated user",
                "operationId": "changePassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "current_password",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "current_password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "new-password"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "new-password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password changed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password changed successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/notifications": {
            "get": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Get user notifications",
                "description": "Returns list of notifications for the authenticated user",
                "operationId": "getNotifications",
                "parameters": [
                    {
                        "name": "unread",
                        "in": "query",
                        "description": "Filter by unread notifications",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NotificationResource"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/notifications/{id}/read": {
            "post": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Mark a specific notification as read",
                "description": "Marks a single notification as read",
                "operationId": "markNotificationAsRead",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of notification",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/notifications/mark-all-read": {
            "post": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Mark all notifications as read",
                "description": "Marks all unread notifications for the user as read",
                "operationId": "markAllNotificationsAsRead",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "All notifications marked as read."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/owners": {
            "get": {
                "tags": [
                    "Owners"
                ],
                "summary": "Get list of owners",
                "description": "Returns list of owners",
                "operationId": "getOwnersList",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OwnerResource"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Owners"
                ],
                "summary": "Store new owner",
                "description": "Returns owner data",
                "operationId": "storeOwner",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreOwnerRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OwnerResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/owners/{id}": {
            "get": {
                "tags": [
                    "Owners"
                ],
                "summary": "Get owner information",
                "description": "Returns owner data",
                "operationId": "getOwnerById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of owner",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OwnerResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Owners"
                ],
                "summary": "Update existing owner",
                "description": "Returns updated owner data",
                "operationId": "updateOwner",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of owner",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateOwnerRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OwnerResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Owners"
                ],
                "summary": "Delete existing owner",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteOwner",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of owner",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/payments": {
            "get": {
                "tags": [
                    "Payments"
                ],
                "summary": "Get list of payments",
                "description": "Returns list of payments",
                "operationId": "getPaymentsList",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search by reference or license plate",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "payment_method",
                        "in": "query",
                        "description": "Filter by payment method",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "description": "Filter by start date",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "date_to",
                        "in": "query",
                        "description": "Filter by end date",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PaymentResource"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Payments"
                ],
                "summary": "Store new payment",
                "description": "Returns payment data",
                "operationId": "storePayment",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StorePaymentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/payments/{id}": {
            "get": {
                "tags": [
                    "Payments"
                ],
                "summary": "Get payment information",
                "description": "Returns payment data",
                "operationId": "getPaymentById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of payment",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/procedures": {
            "get": {
                "tags": [
                    "Procedures"
                ],
                "summary": "Get list of procedures",
                "description": "Returns list of procedures",
                "operationId": "getProceduresList",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "procedure_type",
                        "in": "query",
                        "description": "Filter by procedure type",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "description": "Filter by start date",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "date_to",
                        "in": "query",
                        "description": "Filter by end date",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProcedureResource"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Procedures"
                ],
                "summary": "Store new procedure",
                "description": "Returns procedure data",
                "operationId": "storeProcedure",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreProcedureRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcedureResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/procedures/{id}": {
            "get": {
                "tags": [
                    "Procedures"
                ],
                "summary": "Get procedure information",
                "description": "Returns procedure data",
                "operationId": "getProcedureById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of procedure",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcedureResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Procedures"
                ],
                "summary": "Update existing procedure",
                "description": "Returns updated procedure data",
                "operationId": "updateProcedure",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of procedure",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateProcedureRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcedureResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Procedures"
                ],
                "summary": "Delete existing procedure",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteProcedure",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of procedure",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/settings": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "summary": "Get all application settings",
                "description": "Returns a list of all settings",
                "operationId": "getSettings",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/Setting"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Settings"
                ],
                "summary": "Update application settings",
                "description": "Updates one or more settings. Requires admin privileges.",
                "operationId": "updateSettings",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "settings"
                                ],
                                "properties": {
                                    "settings": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "key",
                                                "value"
                                            ],
                                            "properties": {
                                                "key": {
                                                    "type": "string",
                                                    "example": "garage_name"
                                                },
                                                "value": {
                                                    "type": "string",
                                                    "example": "Garage Municipal de Cotonou"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Settings updated successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/vehicles": {
            "get": {
                "tags": [
                    "Vehicles"
                ],
                "summary": "Get list of vehicles",
                "description": "Returns list of vehicles",
                "operationId": "getVehiclesList",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "description": "Filter by start date",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "date_to",
                        "in": "query",
                        "description": "Filter by end date",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "vehicle_type",
                        "in": "query",
                        "description": "Filter by vehicle type",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/VehicleResource"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Vehicles"
                ],
                "summary": "Store new vehicle",
                "description": "Returns vehicle data",
                "operationId": "storeVehicle",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreVehicleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/vehicles/{id}": {
            "get": {
                "tags": [
                    "Vehicles"
                ],
                "summary": "Get vehicle information",
                "description": "Returns vehicle data",
                "operationId": "getVehicleById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of vehicle",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Vehicles"
                ],
                "summary": "Update existing vehicle",
                "description": "Returns updated vehicle data",
                "operationId": "updateVehicle",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of vehicle",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateVehicleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Vehicles"
                ],
                "summary": "Delete existing vehicle",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteVehicle",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of vehicle",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "StoreUserRequest": {
                "title": "Store User Request",
                "required": [
                    "name",
                    "email",
                    "password",
                    "password_confirmation",
                    "role"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "New User"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "new.user@example.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "password123"
                    },
                    "password_confirmation": {
                        "type": "string",
                        "format": "password",
                        "example": "password123"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "admin",
                            "manager",
                            "agent"
                        ],
                        "example": "agent"
                    }
                },
                "type": "object"
            },
            "UpdateUserRequest": {
                "title": "Update User Request",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Updated User"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "updated.user@example.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "newpassword123",
                        "nullable": true
                    },
                    "password_confirmation": {
                        "type": "string",
                        "format": "password",
                        "example": "newpassword123"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "admin",
                            "manager",
                            "agent"
                        ],
                        "example": "manager"
                    }
                },
                "type": "object"
            },
            "StoreOwnerRequest": {
                "title": "Store Owner Request",
                "required": [
                    "first_name",
                    "last_name",
                    "phone_number",
                    "address",
                    "id_type",
                    "id_number"
                ],
                "properties": {
                    "first_name": {
                        "type": "string",
                        "example": "John"
                    },
                    "last_name": {
                        "type": "string",
                        "example": "Doe"
                    },
                    "phone_number": {
                        "type": "string",
                        "example": "+22997000000"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com",
                        "nullable": true
                    },
                    "address": {
                        "type": "string",
                        "example": "123 Rue de la Paix, Cotonou"
                    },
                    "id_type": {
                        "type": "string",
                        "enum": [
                            "passport",
                            "national_id",
                            "drivers_license"
                        ],
                        "example": "national_id"
                    },
                    "id_number": {
                        "type": "string",
                        "example": "B01234567"
                    },
                    "id_expiration_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2030-12-31",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "UpdateOwnerRequest": {
                "title": "Update Owner Request",
                "properties": {
                    "first_name": {
                        "type": "string",
                        "example": "John"
                    },
                    "last_name": {
                        "type": "string",
                        "example": "Doe"
                    },
                    "phone_number": {
                        "type": "string",
                        "example": "+22997000001"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john.doe.updated@example.com",
                        "nullable": true
                    },
                    "address": {
                        "type": "string",
                        "example": "456 Avenue de la Liberte, Cotonou"
                    },
                    "id_type": {
                        "type": "string",
                        "enum": [
                            "passport",
                            "national_id",
                            "drivers_license"
                        ],
                        "example": "passport"
                    },
                    "id_number": {
                        "type": "string",
                        "example": "P01234567"
                    },
                    "id_expiration_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2032-12-31",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "StorePaymentRequest": {
                "title": "Store Payment Request",
                "required": [
                    "procedure_id",
                    "amount",
                    "payment_method"
                ],
                "properties": {
                    "procedure_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "amount": {
                        "type": "number",
                        "format": "float",
                        "example": 75.5
                    },
                    "payment_method": {
                        "type": "string",
                        "enum": [
                            "cash",
                            "card",
                            "mobile_money"
                        ],
                        "example": "cash"
                    },
                    "reference": {
                        "type": "string",
                        "example": "TXN_123456789",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "StoreProcedureRequest": {
                "title": "Store Procedure Request",
                "required": [
                    "vehicle_id",
                    "procedure_type",
                    "cost"
                ],
                "properties": {
                    "vehicle_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "procedure_type": {
                        "type": "string",
                        "enum": [
                            "impound",
                            "release",
                            "auction"
                        ],
                        "example": "impound"
                    },
                    "description": {
                        "type": "string",
                        "example": "Vehicle impounded for illegal parking.",
                        "nullable": true
                    },
                    "cost": {
                        "type": "number",
                        "format": "float",
                        "example": 75.5
                    }
                },
                "type": "object"
            },
            "UpdateProcedureRequest": {
                "title": "Update Procedure Request",
                "properties": {
                    "procedure_type": {
                        "type": "string",
                        "enum": [
                            "impound",
                            "release",
                            "auction"
                        ],
                        "example": "release"
                    },
                    "description": {
                        "type": "string",
                        "example": "Vehicle released after payment.",
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "in_progress",
                            "completed",
                            "cancelled"
                        ],
                        "example": "completed"
                    },
                    "cost": {
                        "type": "number",
                        "format": "float",
                        "example": 80
                    }
                },
                "type": "object"
            },
            "StoreVehicleRequest": {
                "title": "Store Vehicle Request",
                "required": [
                    "license_plate",
                    "make",
                    "model",
                    "color",
                    "year",
                    "type",
                    "status",
                    "impound_date",
                    "location",
                    "owner_id",
                    "estimated_value"
                ],
                "properties": {
                    "license_plate": {
                        "type": "string",
                        "example": "AB-123-CD"
                    },
                    "make": {
                        "type": "string",
                        "example": "Toyota"
                    },
                    "model": {
                        "type": "string",
                        "example": "Corolla"
                    },
                    "color": {
                        "type": "string",
                        "example": "Red"
                    },
                    "year": {
                        "type": "integer",
                        "example": 2020
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "car",
                            "motorcycle",
                            "truck"
                        ],
                        "example": "car"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "impounded",
                            "released",
                            "auctioned"
                        ],
                        "example": "impounded"
                    },
                    "impound_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-08-22"
                    },
                    "location": {
                        "type": "string",
                        "example": "Row 3, Spot 12"
                    },
                    "photos": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "path/to/photo1.jpg"
                        ],
                        "nullable": true
                    },
                    "qr_code": {
                        "type": "string",
                        "example": "data:image/png;base64,...",
                        "nullable": true
                    },
                    "owner_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "estimated_value": {
                        "type": "number",
                        "format": "float",
                        "example": 15000
                    },
                    "description": {
                        "type": "string",
                        "example": "Vehicle has a dent on the right door.",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "UpdateVehicleRequest": {
                "title": "Update Vehicle Request",
                "properties": {
                    "license_plate": {
                        "type": "string",
                        "example": "AB-123-CD"
                    },
                    "make": {
                        "type": "string",
                        "example": "Toyota"
                    },
                    "model": {
                        "type": "string",
                        "example": "Corolla"
                    },
                    "color": {
                        "type": "string",
                        "example": "Blue"
                    },
                    "year": {
                        "type": "integer",
                        "example": 2020
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "car",
                            "motorcycle",
                            "truck"
                        ],
                        "example": "car"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "impounded",
                            "released",
                            "auctioned"
                        ],
                        "example": "released"
                    },
                    "impound_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-08-22"
                    },
                    "location": {
                        "type": "string",
                        "example": "Released"
                    },
                    "photos": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "path/to/photo1.jpg"
                        ],
                        "nullable": true
                    },
                    "qr_code": {
                        "type": "string",
                        "example": "data:image/png;base64,...",
                        "nullable": true
                    },
                    "owner_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "estimated_value": {
                        "type": "number",
                        "format": "float",
                        "example": 14500
                    },
                    "description": {
                        "type": "string",
                        "example": "Vehicle released after payment.",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "NotificationResource": {
                "title": "Notification Resource",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "9a7f1b2c-3d4e-5f6a-7b8c-9d0e1f2a3b4c"
                    },
                    "type": {
                        "type": "string",
                        "example": "App\\Notifications\\ProcedureCompleted"
                    },
                    "data": {
                        "type": "object"
                    },
                    "read_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "OwnerResource": {
                "title": "Owner Resource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "first_name": {
                        "type": "string",
                        "example": "Jane"
                    },
                    "last_name": {
                        "type": "string",
                        "example": "Doe"
                    },
                    "phone": {
                        "type": "string",
                        "example": "+1234567890"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "jane.doe@example.com"
                    },
                    "address": {
                        "type": "string",
                        "example": "123 Main St, Cotonou"
                    },
                    "id_number": {
                        "type": "string",
                        "example": "B12345678"
                    },
                    "id_type": {
                        "type": "string",
                        "enum": [
                            "passport",
                            "national_id",
                            "drivers_license"
                        ],
                        "example": "national_id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "PaymentResource": {
                "title": "Payment Resource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "procedure_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "amount": {
                        "type": "number",
                        "format": "float",
                        "example": 75.5
                    },
                    "payment_method": {
                        "type": "string",
                        "enum": [
                            "cash",
                            "card",
                            "mobile_money"
                        ],
                        "example": "cash"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "completed",
                            "failed",
                            "refunded"
                        ],
                        "example": "completed"
                    },
                    "reference": {
                        "type": "string",
                        "example": "TXN_123456789"
                    },
                    "paid_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "procedure": {
                        "$ref": "#/components/schemas/ProcedureResource"
                    },
                    "processed_by": {
                        "$ref": "#/components/schemas/UserResource"
                    }
                },
                "type": "object"
            },
            "ProcedureDocumentResource": {
                "title": "Procedure Document Resource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "procedure_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "document_type": {
                        "type": "string",
                        "example": "impound_report"
                    },
                    "file_path": {
                        "type": "string",
                        "example": "documents/impound_report_1.pdf"
                    },
                    "url": {
                        "type": "string",
                        "format": "url",
                        "example": "http://localhost/storage/documents/impound_report_1.pdf"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "ProcedureResource": {
                "title": "Procedure Resource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "vehicle_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "procedure_type": {
                        "type": "string",
                        "enum": [
                            "impound",
                            "release",
                            "auction"
                        ],
                        "example": "impound"
                    },
                    "description": {
                        "type": "string",
                        "example": "Vehicle impounded for illegal parking."
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "in_progress",
                            "completed",
                            "cancelled"
                        ],
                        "example": "pending"
                    },
                    "cost": {
                        "type": "number",
                        "format": "float",
                        "example": 75.5
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "$ref": "#/components/schemas/UserResource"
                    },
                    "documents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProcedureDocumentResource"
                        }
                    }
                },
                "type": "object"
            },
            "UserResource": {
                "title": "User Resource",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "ulid",
                        "example": "01H8XGJWBWBAQ8PEJ9C3J745A1"
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "admin",
                            "manager",
                            "agent"
                        ],
                        "example": "agent"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "VehicleResource": {
                "title": "Vehicle Resource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "license_plate": {
                        "type": "string",
                        "example": "AB-123-CD"
                    },
                    "make": {
                        "type": "string",
                        "example": "Toyota"
                    },
                    "model": {
                        "type": "string",
                        "example": "Corolla"
                    },
                    "color": {
                        "type": "string",
                        "example": "Red"
                    },
                    "year": {
                        "type": "integer",
                        "example": 2020
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "car",
                            "motorcycle",
                            "truck"
                        ],
                        "example": "car"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "impounded",
                            "released",
                            "auctioned"
                        ],
                        "example": "impounded"
                    },
                    "impound_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "location": {
                        "type": "string",
                        "example": "Row 3, Spot 12"
                    },
                    "photos": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "path/to/photo1.jpg"
                        ]
                    },
                    "qr_code": {
                        "type": "string",
                        "example": "data:image/png;base64,..."
                    },
                    "owner_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/OwnerResource"
                    }
                },
                "type": "object"
            },
            "Setting": {
                "title": "Setting",
                "properties": {
                    "key": {
                        "type": "string",
                        "example": "garage_name"
                    },
                    "value": {
                        "type": "string",
                        "example": "Garage Municipal de Cotonou"
                    },
                    "group": {
                        "type": "string",
                        "example": "general"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "name": "bearerAuth",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Admin - Users",
            "description": "Admin - Users"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Notifications",
            "description": "Notifications"
        },
        {
            "name": "Owners",
            "description": "Owners"
        },
        {
            "name": "Payments",
            "description": "Payments"
        },
        {
            "name": "Procedures",
            "description": "Procedures"
        },
        {
            "name": "Settings",
            "description": "Settings"
        },
        {
            "name": "Vehicles",
            "description": "Vehicles"
        }
    ]
}